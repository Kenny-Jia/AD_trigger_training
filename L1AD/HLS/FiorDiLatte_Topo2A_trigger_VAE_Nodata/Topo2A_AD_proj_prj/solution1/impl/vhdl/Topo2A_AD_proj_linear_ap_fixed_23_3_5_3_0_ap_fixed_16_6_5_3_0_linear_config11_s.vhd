-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Topo2A_AD_proj_linear_ap_fixed_23_3_5_3_0_ap_fixed_16_6_5_3_0_linear_config11_s is
port (
    ap_ready : OUT STD_LOGIC;
    data_0_val : IN STD_LOGIC_VECTOR (22 downto 0);
    data_1_val : IN STD_LOGIC_VECTOR (22 downto 0);
    data_2_val : IN STD_LOGIC_VECTOR (22 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_rst : IN STD_LOGIC );
end;


architecture behav of Topo2A_AD_proj_linear_ap_fixed_23_3_5_3_0_ap_fixed_16_6_5_3_0_linear_config11_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal trunc_ln_fu_42_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln32_s_fu_56_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln32_31_fu_70_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln32_fu_52_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_1_fu_66_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln32_2_fu_80_p1 : STD_LOGIC_VECTOR (15 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= sext_ln32_fu_52_p1;
    ap_return_1 <= sext_ln32_1_fu_66_p1;
    ap_return_2 <= sext_ln32_2_fu_80_p1;
        sext_ln32_1_fu_66_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln32_s_fu_56_p4),16));

        sext_ln32_2_fu_80_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln32_31_fu_70_p4),16));

        sext_ln32_fu_52_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_42_p4),16));

    trunc_ln32_31_fu_70_p4 <= data_2_val(22 downto 10);
    trunc_ln32_s_fu_56_p4 <= data_1_val(22 downto 10);
    trunc_ln_fu_42_p4 <= data_0_val(22 downto 10);
end behav;
